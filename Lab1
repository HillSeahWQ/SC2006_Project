Elicit and document requirements
3.2.1 Determine the target users of your application. Elicit functional and non-functional
requirements of the application. Note that in doing this you may wish to have some of the
team members act as customers and the rest of the team be the project development
team. This is an artificial way of defining the requirements but within the constraints of
this course project it is a practical way to proceed.

3.2.2 Document the requirements in appropriate technical format. The requirements should
clearly state who performs what system functionality, taking what input and producing
what output.
3.2.3 Atomise the requirements such that they are verifiable and traceable. See page 126~130
of Fox for requirements specification heuristics. You will be writing test cases in Lab #4 to
verify the requirements. You will also be asked to demonstrate traceability from
requirements to the final product.
3.2.4 Document important terms of your application (e.g., user, device, input, output) in a data
dictionary. Explain each term with a brief description. Identify attributes of each term and
relationships between terms.
3.3 Visualize and refine requirements with Use Case models
3.3.1 From the set of functional requirements, identify the preliminary Use Cases. Depict them
on a Use Case diagram using the UML modeling tool.
3.3.2 For each Use Case, start writing the use case description about how the user interacts
with the system to carry out the system functionality. As a rule-of-thumb, each Use Case
should have a maximum of 6~7 steps in its flow of events. A small Use Case indicates
that the functionality has been sliced too finely; a large Use Case can be further broken
down.
3.3.3 Iterate over your Use Case model to identify included Use Cases, extended Use Cases,
and generalization relationships, if any.
3.4 Develop User Interface Mockups
3.4.1 Develop a UI prototype by sketching a series of screens either using pen and paper or
some suitable software tool. The UI design should incorporate good human-computer
interaction (HCI) principles. The UI mockups do not need to be working software. They
can be hand-drawn.
3.4.2 Use the UI mockups to elicit and refine the requirements.
4. DELIVERABLES
• Documentation of functional and non-functional requirements
• Data dictionary
• Initial Use Case Model, consisting of Use Case diagram and Use Case descriptions
• UI Mockups
